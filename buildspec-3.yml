version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email)
      - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG || true
  build:
    commands:
      - echo Build started on `date`
      - cd express-minapp
      - echo Building the docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo '[{"name":"express-minapp","imageUri":"$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"}]' > imageDefinitions.json
      - sed -i 's|$AWS_ACCOUNT_ID|'"$AWS_ACCOUNT_ID"'|g' imageDefinitions.json
      - sed -i 's|$AWS_DEFAULT_REGION|'"$AWS_DEFAULT_REGION"'|g' imageDefinitions.json
      - sed -i 's|$IMAGE_REPO_NAME|'"$IMAGE_REPO_NAME"'|g' imageDefinitions.json
      - sed -i 's|$IMAGE_TAG|'"$IMAGE_TAG"'|g' imageDefinitions.json
      - cat imageDefinitions.json
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG