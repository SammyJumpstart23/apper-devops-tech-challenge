AWSTemplateFormatVersion: 2010-09-09
Description: Apper DevOps Engineer Technical Challenge - Sammy Medina - Tier 3 - VPC
Parameters:
  ###### Shared Parameters ######
  ProjectName:
    Description: Please enter the name of the project
    Type: String
    Default: rsmedina
  ChallengeTier:
    Description: Please enter the challenge tier for this stack (e.g. 1)
    Type: String
    Default: 3
  Environment:
    Description: Please enter the environment for this stack (e.g. STG, PROD)
    Type: String
    Default: STG

  ###### VPC Parameters ######
  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 172.20.0.0/16
  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the first Public Subnet
    Type: String
    Default: 172.20.0.0/18
  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the second Public Subnet
    Type: String
    Default: 172.20.64.0/18
  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the first Private Subnet
    Type: String
    Default: 172.20.128.0/19
  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the second Private Subnet
    Type: String
    Default: 172.20.160.0/19
  DatabaseSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the first Database Subnet
    Type: String
    Default: 172.20.192.0/19
  DatabaseSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the second Database Subnet
    Type: String
    Default: 172.20.224.0/19

Resources:
  ###### VPC resources ######
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-tier-${ChallengeTier}-${Environment}-vpc
        - Key: TIER
          Value: !Ref ChallengeTier
        - Key: ENV
          Value: !Ref Environment
        - Key: PROJECT_NAME
          Value: !Ref ProjectName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-tier-${ChallengeTier}-${Environment}-ig
        - Key: TIER
          Value: !Ref ChallengeTier
        - Key: ENV
          Value: !Ref Environment
        - Key: PROJECT_NAME
          Value: !Ref ProjectName
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  Public1Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-tier-${ChallengeTier}-${Environment}-public-subnet-1
        - Key: TIER
          Value: !Ref ChallengeTier
        - Key: ENV
          Value: !Ref Environment
        - Key: PROJECT_NAME
          Value: !Ref ProjectName
        - Key: kubernetes.io/role/elb
          Value: 1
  Public2Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-tier-${ChallengeTier}-${Environment}-public-subnet-2
        - Key: TIER
          Value: !Ref ChallengeTier
        - Key: ENV
          Value: !Ref Environment
        - Key: PROJECT_NAME
          Value: !Ref ProjectName
        - Key: kubernetes.io/role/elb
          Value: 1
  Private1Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-tier-${ChallengeTier}-${Environment}-private-subnet-1
        - Key: TIER
          Value: !Ref ChallengeTier
        - Key: ENV
          Value: !Ref Environment
        - Key: PROJECT_NAME
          Value: !Ref ProjectName
        - Key: kubernetes.io/role/internal-elb
          Value: 1
  Private2Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-tier-${ChallengeTier}-${Environment}-private-subnet-2
        - Key: TIER
          Value: !Ref ChallengeTier
        - Key: ENV
          Value: !Ref Environment
        - Key: PROJECT_NAME
          Value: !Ref ProjectName
        - Key: kubernetes.io/role/internal-elb
          Value: 1
  Database1Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      VpcId: !Ref VPC
      CidrBlock: !Ref DatabaseSubnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-tier-${ChallengeTier}-${Environment}-database-subnet-1
        - Key: TIER
          Value: !Ref ChallengeTier
        - Key: ENV
          Value: !Ref Environment
        - Key: PROJECT_NAME
          Value: !Ref ProjectName
  Database2Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      VpcId: !Ref VPC
      CidrBlock: !Ref DatabaseSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-tier-${ChallengeTier}-${Environment}-database-subnet-2
        - Key: TIER
          Value: !Ref ChallengeTier
        - Key: ENV
          Value: !Ref Environment
        - Key: PROJECT_NAME
          Value: !Ref ProjectName

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref Public1Subnet
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-tier-${ChallengeTier}-${Environment}-nat-gateway-1
        - Key: TIER
          Value: !Ref ChallengeTier
        - Key: ENV
          Value: !Ref Environment
        - Key: PROJECT_NAME
          Value: !Ref ProjectName

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref Public2Subnet
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-tier-${ChallengeTier}-${Environment}-nat-gateway-2
        - Key: TIER
          Value: !Ref ChallengeTier
        - Key: ENV
          Value: !Ref Environment
        - Key: PROJECT_NAME
          Value: !Ref ProjectName

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-tier-${ChallengeTier}-${Environment}-public-rt
        - Key: TIER
          Value: !Ref ChallengeTier
        - Key: ENV
          Value: !Ref Environment
        - Key: PROJECT_NAME
          Value: !Ref ProjectName
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  Public1SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Public1Subnet
      RouteTableId: !Ref PublicRouteTable
  Public2SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Public2Subnet
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-tier-${ChallengeTier}-${Environment}-private-rt
        - Key: TIER
          Value: !Ref ChallengeTier
        - Key: ENV
          Value: !Ref Environment
        - Key: PROJECT_NAME
          Value: !Ref ProjectName
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-tier-${ChallengeTier}-${Environment}-private-rt
        - Key: TIER
          Value: !Ref ChallengeTier
        - Key: ENV
          Value: !Ref Environment
        - Key: PROJECT_NAME
          Value: !Ref ProjectName
  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Private1Subnet
      RouteTableId: !Ref PrivateRouteTable1
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Private2Subnet
      RouteTableId: !Ref PrivateRouteTable2
  DatabaseSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Database1Subnet
      RouteTableId: !Ref PrivateRouteTable1
  DatabaseSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Database2Subnet
      RouteTableId: !Ref PrivateRouteTable2

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", "VPC" ] ]

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [",", [!Ref Public1Subnet, !Ref Public2Subnet]]
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", "PublicSubnets" ] ]

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [",", [!Ref Private1Subnet, !Ref Private2Subnet]]
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", "PrivateSubnets" ] ]

  DatabaseSubnets:
    Description: A list of the database subnets
    Value: !Join [",", [!Ref Database1Subnet, !Ref Database2Subnet]]
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", "DatabaseSubnets" ] ]

  Public1Subnet:
    Description: A reference to the public subnet
    Value: !Ref Public1Subnet
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", "Public1Subnet" ] ]

  Public2Subnet:
    Description: A reference to the public subnet
    Value: !Ref Public2Subnet
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", "Public2Subnet" ] ]

  Private1Subnet:
    Description: A reference to the first private subnet
    Value: !Ref Private1Subnet
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", "Private1Subnet" ] ]

  Private2Subnet:
    Description: A reference to the second private subnet
    Value: !Ref Private2Subnet
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", "Private2Subnet" ] ]

  PrivateRouteTable1:
    Description: A reference to the first private route table
    Value: !Ref PrivateRouteTable1
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", "PrivateRouteTable1" ] ]

  PrivateRouteTable2:
    Description: A reference to the second private route table
    Value: !Ref PrivateRouteTable2
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", "PrivateRouteTable2" ] ]

  Database1Subnet:
    Description: A reference to the first database subnet
    Value: !Ref Database1Subnet
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", "Database1Subnet" ] ]

  Database2Subnet:
    Description: A reference to the second database subnet
    Value: !Ref Database2Subnet
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", "Database2Subnet" ] ]